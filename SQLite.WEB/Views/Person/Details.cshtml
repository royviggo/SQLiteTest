@using SQLite.DAL.Enums
@using SQLite.WEB.Models
@model SQLite.WEB.Models.PersonViewModel

@{
    ViewBag.Title = "Person";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    dt {
        float: left;
        width: 100px;
        clear: both;
    }

    dd {
        float: left;
    }

    dl {
        clear: both;
        overflow: hidden;
    }
</style>

<h3>@Model.DisplayName</h3>

<p>
    @if (@Model.DisplayAka != "")
    {
        <text>Also known as: @Model.DisplayAka<br /></text>
    }
    @if (@Model.DisplayTyponym != "")
    {
        <text>Typonym: @Model.DisplayTyponym<br /></text>
    }
</p>

<hr />

<h4>Events</h4>
<table class="table table-condensed" style="width: 100%">
    <thead>
        <tr>
            <th style="width: 15%">Event Type</th>
            <th style="width: 15%">Date</th>
            <th style="width: 35%">Place</th>
            <th style="width: 35%">Description</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var e in Model.Events.OrderBy(m => m.Date))
        {
            <tr>
                <td style="vertical-align: top"><a href="@Url.Action("Edit", "Event", new { id = e.Id })">@e.EventType.Name</a></td>
                <td style="vertical-align: top">@e.Date</td>
                <td style="vertical-align: top">
                    @if (e.Place != null && e.Place.Name.Length > 0)
                    {
                        <text>@e.Place.Name</text>
                    }
                </td>
                <td style="vertical-align: top">
                    @if (!string.IsNullOrEmpty(e.Description))
                    {
                        <text>@e.Description</text>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

<hr />

<h4>Parents</h4>
<table class="table table-condensed" style="width: 100%">
    <tbody>
        <tr>
            <td style="vertical-align: top">Father</td>
            <td style="vertical-align: top">
                @if (Model.Parents != null && Model.Parents.Family.Father != null)
                {
                    <a href="@Url.Action("Details", "Person", new {id = @Model.Parents.Family.Father.PersonId})">@Model.Parents.Family.Father.Person.DisplayName</a> @Model.Parents.Family.Father.Person.DisplayYears
                }
            </td>
        </tr>
        <tr>
            <td style="vertical-align: top">Mother</td>
            <td style="vertical-align: top">
                @if (Model.Parents != null && Model.Parents.Family.Mother != null)
                {
                    <a href="@Url.Action("Details", "Person", new {id = @Model.Parents.Family.Mother.PersonId})">@Model.Parents.Family.Mother.Person.DisplayName</a> @Model.Parents.Family.Mother.Person.DisplayYears
                }
            </td>
        </tr>
    </tbody>
</table>

<hr />

@foreach (var familiy in Model.Spouses.Select(m => m.Family))
{
    <h4>Spouse:
        @{
            var personFamilyViewModel = @familiy.Parents.FirstOrDefault(m => m.PersonId != Model.Id);
        }
        @* ReSharper disable once PossibleNullReferenceException *@
        @if (personFamilyViewModel != null)
        {
            <a href="@Url.Action("Details", "Person", new {id = personFamilyViewModel.PersonId})">@familiy.Parents.FirstOrDefault(m => m.PersonId != Model.Id).Person.DisplayName</a>
            @familiy.Parents.FirstOrDefault(m => m.PersonId != Model.Id).Person.DisplayYears
        }
        else
        {<text>Unknown</text>}
    </h4>
    <h4>Children</h4>
    <table class="table table-condensed" style="width: 100%">
        <tbody>
            @foreach (var child in familiy.Children)
            {
            <tr>
                <td style="vertical-align: top"><a href="@Url.Action("Details", "Person", new {id = @child.PersonId})">@child.Person.DisplayName</a></td>
                <td>@child.Person.DisplayYears</td>
            </tr>
            }
        </tbody>
    </table>
}

<hr />

<h4>Data</h4>

<dl>
    <dt>@Html.LabelFor(m => m.Id)</dt>
    <dd>@Html.DisplayFor(m => m.Id)</dd>

    <dt>@Html.LabelFor(m => m.FirstName)</dt>
    <dd>@Html.DisplayFor(m => m.FirstName)</dd>
    <dt>@Html.LabelFor(m => m.FatherName)</dt>
    <dd>@Html.DisplayFor(m => m.FatherName)</dd>
    <dt>@Html.LabelFor(m => m.Patronym)</dt>
    <dd>@Html.DisplayFor(m => m.Patronym)</dd>
    <dt>@Html.LabelFor(m => m.LastName)</dt>
    <dd>@Html.DisplayFor(m => m.LastName)</dd>

    <dt>@Html.LabelFor(m => m.Gender)</dt>
    <dd>@Html.DisplayFor(m => m.Gender)</dd>

    <dt>@Html.LabelFor(m => m.BornYear)</dt>
    <dd>@Html.DisplayFor(m => m.BornYear)</dd>
    <dt>@Html.LabelFor(m => m.DeathYear)</dt>
    <dd>@Html.DisplayFor(m => m.DeathYear)</dd>
    <dt>@Html.LabelFor(m => m.Status)</dt>
    <dd>@Html.DisplayFor(m => m.Status)</dd>

    <dt>@Html.LabelFor(m => m.CreatedDate)</dt>
    <dd>@Html.DisplayFor(m => m.CreatedDate)</dd>
    <dt>@Html.LabelFor(m => m.ModifiedDate)</dt>
    <dd>@Html.DisplayFor(m => m.ModifiedDate)</dd>
</dl>

