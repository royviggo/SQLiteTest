@using System.Web.UI.WebControls
@model SQLite.WEB.Models.EventEditModel

<div class="row">
    <div class="col-sm-8">
        <div class="form-group">
            <strong>@Model.EventType.Name<br/>@Model.Person.DisplayName</strong>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-sm-8">
        <div class="form-group">
            @Html.LabelFor(m => m.Date.DateEdit)
            @Html.TextBoxFor(m => m.Date.DateEdit, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Date.DateEdit)
        </div>
    </div>
</div>
<div class="row">
    <div class="col-sm-12 col-lg-10">
        <div class="form-group">
            @Html.LabelFor(m => m.PlaceId)
            @Html.DropDownListFor(m => m.PlaceId, Model.PlaceList, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.PlaceId)
        </div>
    </div>
</div>
<div class="row">
    <div class="col-sm-12">
        <div class="form-group">
            @Html.LabelFor(m => m.Description)
            @Html.TextBoxFor(m => m.Description, new {@class = "form-control"})
        </div>
    </div>
</div>

@Html.HiddenFor(m => m.PersonId)
@Html.HiddenFor(m => m.EventTypeId)

@Html.HiddenFor(m => m.Date.DateType)
@Html.HiddenFor(m => m.Date.DateFrom.Year)
@Html.HiddenFor(m => m.Date.DateFrom.Month)
@Html.HiddenFor(m => m.Date.DateFrom.Day)
@Html.HiddenFor(m => m.Date.DateTo.Year)
@Html.HiddenFor(m => m.Date.DateTo.Month)
@Html.HiddenFor(m => m.Date.DateTo.Day)
@Html.HiddenFor(m => m.Date.DatePhrase)
@Html.HiddenFor(m => m.Date.IsValid)
@Html.HiddenFor(m => m.Date.SortDate)


<input type="submit" value="Submit" class="btn btn-success" />

@section scripts
{
    <script>

        $(document).on('change', '#Date_DateEdit', function(event) {
            event.preventDefault();
            parseGenDate(this.val());
        });

        function parseGenDate(dateString) {

            // RexExp for matching range dates and modificator dates
            var reRange = /^(bet|mel|fro|fra)\w*?\s+?(.+)\s*?(\-|and|og|och|to|til|till)\s*?(.+)$/i;
            var reModi = /^(abt|ca|omt|bef|før|för|aft|ett|eft|cal|kal)\w*?\s+?([\w\d]{1,4}\b.*)/i;

            // Test single date first
            var singleDate = parseSingleDate(dateString);
            if (singleDate) {

            }
            else {
                // Test modificator
                var modiArr = reModi.exec(dateString);
                if (modiArr) {
                    var modiDate = parseSingleDate(modiArr[1]);
                } else {
                    // Test range
                    var rangeArr = reRange.exec(dateString);
                    if (rangeArr) {
                        var fromDate = parseSingleDate(rangeArr[1]);
                        var toDate = parseSingleDate(rangeArr[3]);
                    }
                    else {
                        // Leave the string as is
                    }
                }
            }
        }

        function parseSingleDate(dateString) {

            // Matching single dates
            var reGenDateFull = /^(\d{1,2})[\s\-\/\.]+?(jan|feb|mar|apr|mai|may|jun|jul|aug|sep|oct|okt|nov|des|dec)\w*[\s\-\/\.]+?(\d{4})$/i;
            var reGenDateMon = /^(jan|feb|mar|apr|mai|may|jun|jul|aug|sep|oct|okt|nov|des|dec)\w*[\s\-\/\.]+?(\d{4})$/;
            var reIsoDateFull = /^(\d{4})\-(\d\d)\-(\d\d)$/;
            var reIsoDateMon = /^(\d{4})\-(\d\d)$/;
            var reNorDateFull = /^(\d\d)\.(\d\d)\.(\d{4})$/;
            var reYear = /^(\d{4})$/;

            var genDate = reGenDateFull.exec(dateString);
            if (genDate != null)
                return new { Year: genDate[2], Month: genDate[1], Day: genDate[0] };

            var isoDateFull = reIsoDateFull.exec(dateString);
            if (isoDateFull)
                return new { Year: isoDateFull[0], Month: isoDateFull[1], Day: isoDateFull[2] };

            var norDateFull = reNorDateFull.exec(dateString);
            if (norDateFull)
                return new { Year: norDateFull[0], Month: norDateFull[1], Day: norDateFull[2] };

            genDate = reGenDateMon.exec(dateString);
            if (genDate)
                return new { Year: genDate[1], Month: genDate[0], Day: 0 };

            return false;
        }

    </script>
}